// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.

// `.env.ts` is generated by the `npm run env` command
import env from './.env';
export const protectedResourceMap: [string, string[]][] = [
  ['https://graph.microsoft.com/v1.0/me', ['user.read']]
];
export const environment = {
  production: false,
  version: env.npm_package_version + '-dev',
  serverUrl: '/api',
  defaultLanguage: 'en-US',
  supportedLanguages: ['en-US', 'fr-FR'],
  config: {
    clientID: 'c0e915d5-90a1-409e-ab16-cc15f39d74ef',
    authority:
      'https://login.microsoftonline.com/bbc71867-6864-4f71-9cb3-bf21da49f4f5/',
    validateAuthority: true,
    redirectUri: 'https://tfo-devtdssqladmin.eyasp.in/',
    postLogoutRedirectUri: 'https://tfo-devtdssqladmin.eyasp.in/',
    navigateToLoginRequestUrl: true,
    cacheLocation: 'localStorage',
    consentScopes: [
      'user.read',
      'openid',
      'profile',
      'api://a88bb933-319c-41b5-9f04-eff36d985612/access_as_user'
    ],
    unprotectedResources: ['https://www.microsoft.com/en-us/'],
    protectedResourceMap
  },
  LOGIN_RESOURCE_URL: 'https://login.microsoftonline.com',
  api: {
    authorization: '/api/authorization/',
    administration: '/api/administration/',
    challans: '/api/challans/',
    dashboards: '/api/dashboards/',
    masters: '/api/masters/',
    ingestion: '/api/ingestion/',
    onboarding: '/api/onboarding/',
    rateengine: '/api/rateengine/',
    returns: '/api/returns/',
    auth: '/api/auth/',
    admin: '/api/admin/',
    fvu: '/api/fvu-proxy/generate',
    reports: '/api/reports/',
    validation: '/api/validation/',
    zuulgatway: '/api/zuulgatway/',
    logger: '/api/ui-logger/log',
    panwebsocket: 'wss://' + localStorage.getItem('hostname') + '/ws',
    ldcwebsocket: 'wss://' + localStorage.getItem('hostname') + 'ws-ldc',
    singlepanwebsocket: 'wss://tfo-devtdssqladmin.eyasp.in/ws-singlepan',
    singleldcwebsocket: 'wss://tfo-devtdssqladmin.eyasp.in/ws-singleldc',
    filingwebsocket: 'wss://tfo-devtdssqladmin.eyasp.in/ws-filing',
    utilizationwebsocket: 'wss://tfo-devtdssqladmin.eyasp.in/ws-utilization',
    csiwebsocket: 'wss://tfo-devtdssqladmin.eyasp.in/csi',
    consolefilewebsocket: 'wss://tfo-devtdssqladmin.eyasp.in/consolesubmission',
    consoledownload: 'wss://tfo-devtdssqladmin.eyasp.in/consoledownload',
    consolesubmission: 'wss://tfo-devtdssqladmin.eyasp.in/consolesubmission',
    form16download: 'wss://tfo-devtdssqladmin.eyasp.in/form16download',
    form16submission: 'wss://tfo-devtdssqladmin.eyasp.in/form16submission',
    justificationdownload:
      'wss://tfo-devtdssqladmin.eyasp.in/justificationdownload',
    justificationsubmission:
      'wss://tfo-devtdssqladmin.eyasp.in/justificationsubmission',
    residentsectionDetermination: '/api/flask/resident/section',
    nonResidentSectionDetermination: '/api/flask/non-resident/section',
    afterSectionDetermination: '/api/flask/invoice/tracking',
    flaskapi: 'api/flask',
    sparkapi: 'api/spark'
  },
  tenantConfigTypes: {
    databaseConfig: 'cosmos-config.',
    sftpConfig: 'sftp-config.',
    blobConfig: 'blob-storage.',
    powerbiConfig: 'power-bi.'
  },
  logger: {
    debug: {
      enabled: false
    },
    info: {
      enabled: true
    },
    warn: {
      enabled: true
    },
    error: {
      enabled: true
    }
  }
};
